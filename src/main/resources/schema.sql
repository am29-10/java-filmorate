DROP TABLE IF EXISTS
    users,
    films,
    likes,
    friendship,
    friend_status,
    MPA,
    film_genre,
    genres;

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    login VARCHAR(50) NOT NULL,
    birthday DATE NOT NULL
 );

CREATE TABLE IF NOT EXISTS MPA (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(200)
);


CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description varchar(200) NOT NULL,
    release_date DATE NOT NULL,
    duration INTEGER NOT NULL,
    MPA_id INTEGER REFERENCES MPA(ID)
);


CREATE TABLE IF NOT EXISTS likes (
    user_id INTEGER NOT NULL REFERENCES USERS(ID),
    film_id INTEGER NOT NULL REFERENCES FILMS(ID),
    CONSTRAINT likes_id PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id INTEGER NOT NULL REFERENCES USERS(ID),
    friend_id INTEGER NOT NULL REFERENCES USERS(ID),
    CONSTRAINT friendship_id PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER NOT NULL REFERENCES FILMS(ID),
    genre_id INTEGER NOT NULL REFERENCES GENRES(ID)
);

INSERT INTO MPA (id, name, description)
VALUES (1,'G','У фильма нет возрастных ограничений'),
       (2,'PG','Детям рекомендуется смотреть фильм с родителями'),
       (3,'PG-13','Детям до 13 лет просмотр не желателен'),
       (4,'R','Лицам до 17 лет просматривать фильм можно только в присутствии взрослого'),
       (5,'NC-17','Лицам до 18 лет просмотр запрещён');

INSERT INTO genres (id, name)
VALUES (1,'Комедия'),
       (2,'Драма'),
       (3,'Мультфильм'),
       (4,'Триллер'),
       (5,'Документальный'),
       (6,'Боевик');


